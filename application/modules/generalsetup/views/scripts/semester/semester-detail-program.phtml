 <style>
.custom-combobox {
position: relative;
display: inline-block;
}
.custom-combobox-toggle {
position: absolute;
top: 0;
bottom: 0;
margin-left: -1px;
padding: 0;
/* support: IE7 */
*height: 1.7em;
*top: 0.1em;
}
.custom-combobox-input {
margin: 0;
padding: 0.3em;
}
</style>
<script>
(function( $ ) {
    $.widget( "custom.combobox", {
        _create: function() {
            this.wrapper = $( "<span>" )
            .addClass( "custom-combobox" )
            .insertAfter( this.element );
            this.element.hide();
            this._createAutocomplete();
            this._createShowAllButton();
        },
        _createAutocomplete: function() {
            var selected = this.element.children( ":selected" ),
            value = selected.val() ? selected.text() : "";
            this.input = $( "<input>" )
            .appendTo( this.wrapper )
            .val( value )
            .attr( "title", "" )
            .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
            .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
            })
            .tooltip({
            tooltipClass: "ui-state-highlight"
            });
            this._on( this.input, {
            autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
            item: ui.item.option
            });
            },
            autocompletechange: "_removeIfInvalid"
            });
        },
        _createShowAllButton: function() {
            var input = this.input,
            wasOpen = false;
            $( "<a>" )
                .attr( "tabIndex", -1 )
                .attr( "title", "Show All Items" )
                .tooltip()
                .appendTo( this.wrapper )
                .button({
                    icons: {
                        primary: "ui-icon-triangle-1-s"
                    },
                    text: false
                })
                .removeClass( "ui-corner-all" )
                .addClass( "custom-combobox-toggle ui-corner-right" )
                .mousedown(function() {
                    wasOpen = input.autocomplete( "widget" ).is( ":visible" );
                })
            .click(function() {
                input.focus();
                // Close if already visible
                if ( wasOpen ) {
                    return;
                }
                // Pass empty string as value to search for, displaying all results
                input.autocomplete( "search", "" );
            });
        },
        _source: function( request, response ) {
            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
            response( this.element.children( "option" ).map(function() {
                var text = $( this ).text();
                if ( this.value && ( !request.term || matcher.test(text) ) )
                return {
                label: text,
                value: text,
                option: this
                };
            }) );
        },
        _removeIfInvalid: function( event, ui ) {
            // Selected an item, nothing to do
            if ( ui.item ) {
                return;
            }
            // Search for a match (case-insensitive)
            var value = this.input.val(),
            valueLowerCase = value.toLowerCase(),
            valid = false;
            this.element.children( "option" ).each(function() {
                if ( $( this ).text().toLowerCase() === valueLowerCase ) {
                    this.selected = valid = true;
                return false;
                }
            });
            // Found a match, nothing to do
            if ( valid ) {
                return;
            }
            // Remove invalid value
            this.input
                .val( "" )
                .attr( "title", value + " didn't match any item" )
                .tooltip( "open" );
                this.element.val( "" );
                this._delay(function() {
                this.input.tooltip( "close" ).attr( "title", "" );
                }, 2500 );
            this.input.data( "ui-autocomplete" ).term = "";
        },
        _destroy: function() {
        this.wrapper.remove();
        this.element.show();
        }
    });
})( jQuery );
$(function() {
    $( "#combobox" ).combobox({
        select: function( event, ui ) {
            $.ajax({
                type: "GET",
                url: "/generalsetup/semester/semester-program-activity/semestermaster/<?php echo $this->IdSemesterMaster;?>/programid/"+ui.item.value,
                success : function(data){
                    $("#ajaxDate").html(data);
                    dojo.parser.parse();
                }
            });
            //alert(ui.item.value);
        }
    });
    $( "#toggle" ).click(function() {
        $( "#combobox" ).toggle();
    });
});
   
</script>
<fieldset>
    <legend><?php echo $this->translate("Semester").' '.$this->translate("Program");?></legend>
    <form id="mainForm" dojoType="dijit.form.Form" method="POST">
         <table class="table" width="100%" >
            <tr>
                <th colspan = "4"><?php echo $this->translate("Semester").' '.$this->translate("Program").' '.$this->translate("Details");?></th>
            </tr>
            <tr>
                <td><?php echo $this->translate("Academic Year");?></td>
                <td colspan="3">
                  <?php echo $this->result['idacadyear'];?>
                </td>
            </tr>
            <tr>
                <td ><?php echo $this->translate("Semester Name");?></td>
                <td ><?php echo $this->result['SemesterMainName'];?></td>
                <td ><?php echo $this->translate("Semester Name") ." ". $this->translate($this->defaultlanguage);?></td>
                <td ><?php echo $this->result['SemesterMainDefaultLanguage'];?></td>
            </tr>
            <tr>
                <td ><?php echo $this->translate("Semester").' '.$this->translate("Code");?><span class="reqMark">*</span></td>
                <td colspan="3"><?php echo $this->result['SemesterMainCode'];?><?php echo $this->result['IdSemesterMaster']; ?></td>
            </tr>
            
            <tr>
                <td><?php echo $this->translate("Semester").' '.$this->translate("Start").' '.$this->translate("Date");?></td>
                <td><?php echo $this->result['SemesterMainStartDate'];?></td>
                <td><?php echo $this->translate("Semester").' '.$this->translate("End").' '.$this->translate("Date");?></td>
                <td><?php echo $this->result['SemesterMainEndDate'];?></td>

            </tr>
            <tr>
                <td><?php echo $this->translate("Is Countable");?></span></td>
                <td><?php echo $this->result['IsCountable'];?></td>
                <td><?php echo $this->translate("Scheme");?></td>
                <td><?php echo $this->result['Scheme'];?></td>

            </tr>
            <tr>
                <td><?php echo $this->translate("Program");?><span class="reqMark"></span></td>
                <td colspan="3">
                    <div class="ui-widget">
                        <select id="combobox" name="idProgram">
                            <option value="">Please Select</option>
                        <?php foreach($this->program as $program):?>
                            <option value="<?php echo $program['key'];?>"><?php echo $program['value'];?></option>
                        <?php endforeach;?>
                        </select>
                        <input type="hidden" id="IdSemesterMaster" name="IdSemesterMaster" value="<?php echo $this->IdSemesterMaster;?>">
                    </div>
                </td>
            </tr>
        </table>
        <div id="ajaxDate">
            
        </div>
    </form>
</fieldset>
